<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set Your Password</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            max-width: 450px;
            width: 100%;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .header h1 {
            color: #333;
            font-size: 28px;
            margin-bottom: 10px;
        }
        
        .header p {
            color: #666;
            font-size: 16px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        .password-requirements {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
            color: #555;
        }
        
        .password-requirements h4 {
            margin-bottom: 8px;
            color: #333;
        }
        
        .password-requirements ul {
            list-style-type: none;
            padding-left: 0;
        }
        
        .password-requirements li {
            margin-bottom: 4px;
        }
        
        .password-requirements li:before {
            content: "âœ“ ";
            color: #28a745;
            font-weight: bold;
        }
        
        .btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .error {
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #f5c6cb;
        }
        
        .success {
            background-color: #d4edda;
            color: #155724;
            padding: 10px 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #c3e6cb;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Set Your Password</h1>
            <p>Welcome! Please create a secure password for your account.</p>
        </div>
        
        <div id="message-container"></div>
        
        <form id="password-form">
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required>
            </div>
            
            <div class="form-group">
                <label for="confirm_password">Confirm Password</label>
                <input type="password" id="confirm_password" name="confirm_password" required>
            </div>
            
            <div class="password-requirements">
                <h4>Password Requirements:</h4>
                <ul>
                    <li>At least 8 characters long</li>
                    <li>Contains uppercase and lowercase letters</li>
                    <li>Contains at least one number</li>
                    <li>Contains at least one special character</li>
                </ul>
            </div>
            
            <button type="submit" class="btn">Set Password</button>
        </form>
    </div>

    <script>
        const form = document.getElementById('password-form');
        const messageContainer = document.getElementById('message-container');
        
        function showMessage(message, type = 'error') {
            messageContainer.innerHTML = `<div class="${type}">${message}</div>`;
        }
        
        function clearMessages() {
            messageContainer.innerHTML = '';
        }
        
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            clearMessages();
            
            const formData = new FormData(form);
            const password = formData.get('password');
            const confirmPassword = formData.get('confirm_password');
            
            // Client-side validation
            if (password !== confirmPassword) {
                showMessage('Passwords do not match!');
                return;
            }
            
            if (password.length < 8) {
                showMessage('Password must be at least 8 characters long!');
                return;
            }
            
            try {
                // Get user ID from URL
                const userID = window.location.pathname.split('/')[2];
                
                const response = await fetch(`/set-password/${userID}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRFToken': getCookie('csrftoken')
                    },
                    body: JSON.stringify({
                        password: password,
                        confirm_password: confirmPassword
                    })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    showMessage('Password set successfully! You can now log in.', 'success');
                    form.style.display = 'none';
                } else {
                    let errorMessage = 'An error occurred. Please try again.';
                    
                    if (data.password) {
                        errorMessage = data.password.join(' ');
                    } else if (data.confirm_password) {
                        errorMessage = data.confirm_password.join(' ');
                    } else if (data.error) {
                        errorMessage = data.error;
                    }
                    
                    showMessage(errorMessage);
                }
            } catch (error) {
                showMessage('Network error. Please check your connection and try again.');
            }
        });
        
        // Function to get CSRF token
        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
    </script>
</body>
</html>